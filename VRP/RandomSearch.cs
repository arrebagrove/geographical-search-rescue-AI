//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;


public class RandomSearch{
	
	public RandomSearch (){
	}

	public VRPsolution computeRoutes(int T /*T number of iterations*/){

		/* ordered chromosome */
		Chromosome currentSol= new Chromosome();

		/* initial best solution and best fitness */
		Chromosome bestSolSoFar = currentSol;
		double bestFitnessSoFar = currentSol.getFitness();

		Debug.Log("Initial fitness: "+ bestFitnessSoFar);
		Debug.Log ("Initial Chromosome: "+ bestSolSoFar);

		for(int i=0;i<T;i++){
			currentSol.shuffleChromosome();
			if (currentSol.getFitness () < bestFitnessSoFar) {
				bestSolSoFar = new Chromosome(currentSol);
				bestFitnessSoFar = currentSol.getFitness ();
			}
		}

		Debug.Log("Best Fitness after T iterations" + bestFitnessSoFar);
		Debug.Log ("Final Chromosome: "+ bestSolSoFar);

		return bestSolSoFar.buildSolution();
	}

	

}



